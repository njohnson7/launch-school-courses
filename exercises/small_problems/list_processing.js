// /*----------------- 1 --------------------*/console.log('-------- 1 ---------');
// //============= Alphabetical Numbers =============//

// // const NUMS = {
// //   0: 19, 1: 9, 2: 18, 3: 16, 4: 5, 5: 4, 6: 12, 7: 10, 8: 0, 9: 7, 10: 14,
// //   11: 2, 12: 17, 13: 15, 14: 6, 15: 3, 16: 13, 17: 11, 18: 1, 19: 8
// // };


// const NUMS = [19, 9, 18, 16, 5, 4, 12, 10, 0, 7, 14, 2, 17, 15, 6, 3, 13, 11, 1, 8];
// const alphabeticNumberSort = nums => [...nums].sort((a, b) => NUMS[a] - NUMS[b]);


// let numz = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];
// let numz2 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 0, 19, 4, 2, 1, 9, 2, 1,2,3,5,19,11,1,11,15,18,12,11,1,3,3,0,9,3, 11, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];

// let shuff1 = shuffle(numz);
// let shuff2 = shuffle(numz2);

// let sorted1 = alphabeticNumberSort(shuff1);
// let sorted2 = alphabeticNumberSort(shuff2);

// p(eql(sorted1, alphabeticNumberSort(shuff1)));
// p(eql(sorted2, alphabeticNumberSort(shuff2)));


// console.log('======');


// p(eql(alphabeticNumberSort([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]),
//       [8, 18, 11, 15, 5, 4, 14, 9, 19, 1, 7, 17, 6, 16, 10, 13, 3, 12, 2, 0]));

// p(eql(alphabeticNumberSort([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]),
//       [8, 18, 11, 15, 5, 4, 14, 9, 19, 1, 7, 17, 6, 16, 10, 13, 3, 12, 2, 0]));


// console.log('~~~~~');


// // p(alphabeticNumberSort2([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]));
// // // [8, 18, 11, 15, 5, 4, 14, 9, 19, 1, 7, 17, 6, 16, 10, 13, 3, 12, 2, 0]

// p(eql(alphabeticNumberSort([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]),
//       [8, 18, 11, 15, 5, 4, 14, 9, 19, 1, 7, 17, 6, 16, 10, 13, 3, 12, 2, 0]));

// p(eql(alphabeticNumberSort([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]),
//       [8, 18, 11, 15, 5, 4, 14, 9, 19, 1, 7, 17, 6, 16, 10, 13, 3, 12, 2, 0]));

// p(elog(alphabeticNumberSort([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19]),
//       [8, 8, 18, 11, 15, 5, 4, 14, 9, 19, 1, 7, 17, 6, 16, 10, 13, 3, 12, 2, 0]));

// p(elog(alphabeticNumberSort([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]),
//       [8, 18, 11, 15, 5, 4, 14, 9, 19, 1, 7, 17, 6, 16, 10, 13, 3, 12, 2]));

// p(eql(alphabeticNumberSort([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]),
//       [8, 18, 11, 15, 5, 4, 14, 9, 19, 1, 7, 17, 6, 16, 10, 13, 3, 12, 2, 0]));










// /*---------------- 2 -----------------*/console.log('\n-------------------');
// //============= Sum of Digits =============//


// const sum = num => [...`${num}`].reduce((s, n) => s + +n, 0);



// const sum = num => num && num % 10 + sum(~~(num / 10)) || 0;



// const sum = num => num ? num % 10 + sum(~~(num / 10)) : 0;




// p(sum(23));          // 5
// p(sum(496));         // 19
// p(sum(123456789));   // 45







// /*---------------- 3 -----------------*/console.log('\n--------- 3 ----------');
// //============= Multiply All Pairs =============//


// const multiplyAllPairs = (a, b) => (
//   [].concat(...a.map(x => b.map(y => x * y))).sort((x, y) => x - y)
// );



// elog(multiplyAllPairs([2, 4], [4, 3, 1, 2]), [2, 4, 4, 6, 8, 8, 12, 16]);









// /*---------------- 4 -----------------*/console.log('\n--------- 4 ----------');
// //============= Sum of Sums =============//














// /*---------------- 5 -----------------*/console.log('\n--------- 5 ----------');
// //============= Leading Substrings =============//














// /*---------------- 6 -----------------*/console.log('\n--------- 6 ----------');
// //============= All Substrings =============//














// /*---------------- 7 -----------------*/console.log('\n--------- 7 ----------');
// //============= Palindromic Substrings =============//














// /*---------------- 8 -----------------*/console.log('\n--------- 8 ----------');
// //============= Grocery List =============//














// /*---------------- 9 -----------------*/console.log('\n--------- 9 ----------');
// //============= Inventory Item Transactions =============//














// /*---------------- 10 -----------------*/console.log('\n--------- 10 --------');
// //============= Inventory Item Availability =============//









