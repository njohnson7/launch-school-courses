



















[html]

<div id="1">
  <h1 id="2">Hello, <em id="3">World</em></h1>
  <p id="4">
    Welcome to wonderland. This is an
    <span id="5">awesome</span> place.
  </p>
  <a href="#" id="6"><strong id="7">Enter</strong></a>
  <div id="8"><p id="9"><a href="#" id="10">Go back</a></p></div>
</div>

[end]


html: 2, 22
  head
  body: 1, 21
    div: 9, 12
      empty
      h1: 2, 1
        text
        em: 1, 0
          text
      empty
      p: 3, 1
        text
        span: 1, 0
          text
        text
      empty
      a: 1, 1
        strong: 1, 0
          text
      empty
      div: 1, 2
        p: 1, 1
          a: 1, 0
            text
      empty


Further Exploration:

[js]

const walk = (node, fn) => {
  fn(node);
  node.childNodes.forEach(child => walk(child, fn));
};

const allNodes = node => {
  let nodes = [];
  walk(node, nodes.push.bind(nodes));
  return nodes;
};

const childNodes = node => {
  let total    = allNodes(node).length - 1;
  let direct   = node.childNodes.length;
  let indirect = total - direct;
  return [direct, indirect];
};

childNodes(document.querySelector('div'));  // [9, 12]


//============================================================================//


const walkChildren = (node, fn) => {
  node.childNodes.forEach(child => {
    fn(child);
    walkChildren(child, fn);
  });
};

const countIndirectChildren = children => {
  let indirectCount = 0;
  children.forEach(child => walkChildren(child, _ => indirectCount++));
  return indirectCount;
};

const childNodes = node => {
  let directChildren = node.childNodes;
  let directCount    = directChildren.length;
  let indirectCount  = countIndirectChildren(directChildren);
  return [directCount, indirectCount];
};


elog(childNodes(document.querySelector('div')),  [9, 12]);
elog(childNodes(document.querySelector('h1')),   [2, 1]);
elog(childNodes(document.querySelector('em')),   [1, 0]);
elog(childNodes(document.querySelector('p')),    [3, 1]);
elog(childNodes(document.querySelector('span')), [1, 0]);


// LS test cases:
const jsonEqual = (a, b) => JSON.stringify(a) == JSON.stringify(b);

console.log(jsonEqual(childNodes(document.querySelector('div')),  [9, 12])); // true
console.log(jsonEqual(childNodes(document.querySelector('h1')),   [2, 1]));  // true
console.log(jsonEqual(childNodes(document.querySelector('em')),   [1, 0]));  // true
console.log(jsonEqual(childNodes(document.querySelector('p')),    [3, 1]));  // true
console.log(jsonEqual(childNodes(document.querySelector('span')), [1, 0]));  // true


// const indirectChildren = children => {
//   return children.reduce((count, child) => {
//     walkChildren(child, _ => count++);
//     return count;
//   }, 0);
// };


[end]
