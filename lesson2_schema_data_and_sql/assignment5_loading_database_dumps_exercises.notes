--- 1 ---
Load this file into your database.:

a. What does the file do?
  - the file contains SQL statemnts that get executed when file is imported

b. What is the output of the command? What does each line in this output mean?
  - checks if "films" table exists, and deletes it if so, or skips otherwise
  - creates a table called films with 3 columns: title, year, genre
  - adds 3 rows of films into films table

c. Open up the file and look at its contents. What does the first line do?
  - see above




--- 2 ---
Write a SQL statement that returns all rows in the films table.:

[sql]

SELECT * FROM films;

[/sql]





--- 3 ---
Write a SQL statement that returns all rows in the films table with a title shorter than 12 letters.:

[sql]

SELECT * FROM films WHERE length(title) < 12;

[/sql]




--- 4 ---
Write the SQL statements needed to add two additional columns to the films table: director, which will hold a director's full name, and duration, which will hold the length of the film in minutes.:

[sql]

ALTER TABLE films ADD COLUMN director text;
ALTER TABLE films ADD COLUMN duration integer;

[/sql]





--- 5 ---
Write SQL statements to update the existing rows in the database with values for the new columns:
    title   director  duration
    Die Hard  John McTiernan  132
    Casablanca  Michael Curtiz  102
    The Conversation  Francis Ford Coppola  113

[sql]

UPDATE films SET director = 'John McTiernan', duration = 132 WHERE title = 'Die Hard';
UPDATE films SET director = 'Michael Curtiz', duration = 102 WHERE title = 'Casablanca';
UPDATE films SET director = 'Francis Ford Coppola', duration = 113 WHERE title = 'The Conversation';

[/sql]





--- 6 ---
Write SQL statements to insert the following data into the films table:
    title   year  genre   director  duration
    1984  1956  scifi   Michael Anderson  90
    Tinker Tailor Soldier Spy   2011  espionage   Tomas Alfredson   127
    The Birdcage  1996  comedy  Mike Nichols  118

[sql]

INSERT INTO films VALUES
('1984',  1956,  'scifi',   'Michael Anderson',  90),
('Tinker Tailor Soldier Spy',   2011,  'espionage',   'Tomas Alfredson',   127),
('The Birdcage',  1996,  'comedy',  'Mike Nichols',  118);


[/sql]





--- 7 ---
Write a SQL statement that will return the title and age in years of each movie, with newest movies listed first:

[sql]

SELECT title, extract(year from current_date) - year AS age FROM films ORDER BY age;

---or:

SELECT title, 2017 - year AS age FROM films ORDER BY age;


[/sql]





--- 8 ---
Write a SQL statement that will return the title and duration of each movie longer than two hours, with the longest movies first.:

[sql]

SELECT title, duration FROM films WHERE duration > 120 ORDER BY duration DESC;

[/sql]





--- 9 ---
Write a SQL statement that returns the title of the longest film.:

[sql]

SELECT title FROM films ORDER BY duration DESC LIMIT 1;

[/sql]
