================================================================
--- Lesson 2 - Improving HTML/CSS Video ---
================================================================

- header:
  - instead of #header --->
  - direct child:
        body > header {
          padding: 1rem 2.5rem;
          background: #FF2D00;
        }
    - or role selector:
          header[role=banner] {
            padding: 1rem 2.5rem;
            background: #FF2D00;
          }



=============================================================================



- review how devtools works:
  - "https://launchschool.com/lessons/72c8ad7b/assignments/9ad264cf"




--------- Company Splash Page Project ---------

Decipher the Design Files:
  1. determine what HTML elems are needed to recreate the design





=============================================================================
---------------------------------- TODO -------------------------------------
=============================================================================

- 'Further Reading' section on all assignments
- install HTML linter for Sublime?
- visual formatting model / visual display model
- vertical-align on inline-block elems
- watch flexbox talk
  - and flexbox info...?: "https://launchschool.com/lessons/4933c521/assignments/232bf105"
- # physical pixel vs. CSS pixel ---> problem for assessment?
- Shaye HOwe positioning
- do shay howe tutorial again?
- w3c proper style on assessment
- chrome devtools screencasts...?: "https://developers.google.com/web/tools/chrome-devtools/?utm_source=dcc&utm_medium=redirect&utm_campaign=2016q3"

Maybe Todo:
- more flashcards about frames: "https://launchschool.com/lessons/b80a876c/assignments/d3382604"
- form docs and guide on MDN:
  - "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form"
  - "https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms"
- types of input: "https://launchschool.com/lessons/b80a876c/assignments/829021b6"
- code review: contact form

Take Notes / Flashcards:
- assignemnt 6, lesson 13 - sprite sheets:
  - "https://launchschool.com/lessons/b80a876c/assignments/13c30b4e"
    - and practice on the battery sprite sheet!






=============================================================================
------------------------------- Form Layouts --------------------------------
=============================================================================
Video:
- 2 main types of form layouts:
  1. <label> positioned directly above corresponding input (vertically) (top-to-bottom)
  2. <label> positioned horizontally (usually left side)

- <dl> is better than <div>....






----------------------- SCRATCH ------------------------------



[html]

<form action="/search" method="get" novalidate>

<input type='text' name='phone' placeholder='(212) 555-1212'>


<!-- Separate CSS File -->
<link href="styles.css" rel="stylesheet" media="all and (max-width: 1024px)">






<form action="/login" method="post">
  <fieldset>
    <h1>Log In</h1>
    <label for="email">Email address</label>
    <input type="email" name="email" id="email" />
    <label for="password">Password</label>
    <input type="password" name="password" id="password" />
    <div class="actions">
      <input type="submit" value="Login" />
      <button type="submit" formaction="/account/delete">Delete account</button>
      <button type="submit" formaction="/account/password_reset">Reset password</button>
    </div>
  </fieldset>
</form>


<form id="search" action="/search" method="get">
  <fieldset>
    <input type="search" name="query" />
  </fieldset>
</form>

<input type="submit" value="Search" form="search" />

<meta name='viewport' content='width=device-width, initial-scale=1'>

<footer>
  <small>&copy; Styles Conference</small>
</footer>

            <a class="btn btn-danger">...</a>
            <a class="btn btn-success">...</a>


                <header class="container">...</header>
                <footer class="container">...</footer>

                <p>This is the first sentence</p>
                <p>This is the second sentence</p>
[end][css]
                p {
                  margin-top: 32px;
                  margin-bottom: 15px;
                }


                .container {
                  margin: 0 auto;
                  padding-left: 30px;
                  padding-right: 30px;
                  width: 960px;
                }


            .btn {
              font-size: 16px;
            }
            .btn-danger {
              background: red;
            }
            .btn-success {
              background: green;
            }

            .banner {
              font-size: 14px;
              width: 5em;
            }

body {
  font-family: Arial, Helvetica, sans-serif;
}

p {
  /* fallback to 50% if 50vw not recognized: */
  width: 50%; width: 50vw;
}


html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
}



.container {
  width: 538px;
}
section, aside {
  margin: 10px;
}
section {
  float: left;
  width: 340px;
}
aside {
  float: right;
  width: 158px;
}
/*===================*/
section, aside {
  margin: 1.858736059%; /*  10px รท 538px = .018587361 */
}
section {
  float: left;
  width: 63.197026%;    /* 340px รท 538px = .63197026 */
}
aside {
  float: right;
  width: 29.3680297%;  /* 158px รท 538px = .293680297 */
}

@media print {
  body { font-size: 10pt }
}
@media screen {
  body { font-size: 13px }
}
@media screen, print {
  body { line-height: 1.2 }
}
@media only screen
  and (min-device-width: 320px)
  and (max-device-width: 480px)
  and (-webkit-min-device-pixel-ratio: 2) {
    body { line-height: 1.4 }
}

@media all and (min-width: 800px) and (max-width: 1024px) { a { line-height: 1.4 } }
@media not screen and (color) { a { line-height: 1.4 } }
@media only screen and (orientation: portrait) { a { line-height: 1.4 } }
@media (min-width: 700px), handheld and (orientation: landscape) { a { line-height: 1.4 } }

@media all and (min-width: 320px) and (max-width: 780px) { a { line-height: 1.4 } }

img, video, canvas {
  max-width: 100%;
}


a { color: #ff0000; }

@media (max-width: 480px) {
  a { color: #0066cc; }
}

@media screen and (max-width: 480px), screen and (orientation: portrait) { /*...*/}

[end]


[ruby]

def dd(target, context)
  puts format("%.8f\%", (target.fdiv(context) * 100)) + ";"
end


[end]